Most RMAN commands take several parameters and must end with a semicolon.
Some commands, such as STARTUP, SHUTDOWN, and CONNECT, can be used with or without a semicolon.

%> rman LOG /tmp/rman.log  -- to print rman log output in only rman.log file
%> rman | tee rman.log -- to print rman log output in both rman.log file and rman output

--Entering Comments in RMAN Command Files
The comment character in RMAN is a pound sign (#)
RMAN> BACKUP # this is a comment
2> SPFILE;

-- To check syntax of RMAN command
cmd> rman CHECKSYNTAX
cmd> rman CHECKSYNTAX @filename -- check sysnax in a file

#Inconsistent Backup:
--In NOARCHIVELOG Mode, the database back up can be taken while it is open. It is inconsistent state.
RMAN> BACKUP DATABASE PLUS ARCHIVELOG; -- take backup of database with all archived redo log files.

#Consistent database backup:
1. Start RMAN and connect to a target database
2. Shut down the database consistently and then mount it.
--In NOARCHIVELOG Mode, to guarantee that the database is in aconsistent state for a backup
RMAN> SHUTDOWN IMMEDIATE;
RMAN> STARTUP FORCE DBA;
RMAN> SHUTDOWN IMMEDIATE;
RMAN> STARTUP MOUNT;

3. Run the BACKUP DATABASE command.
--For example, enter the following command at the RMAN prompt to back up the database to the default backup device:
RMAN> BACKUP DATABASE;
RMAN> BACKUP DATABASE INCLUDE CURRENT CONTROLFILE;
RMAN> BACKUP PLUGGABLE DATABASE <pdb_name1>,<pdb_name2>, ...; -- backup pluggable database.
RMAN> BACKUP ARCHIVELOG ALL; --backs up the archived redo logs

--override the default device
BACKUP DEVICE TYPE sbt DATABASE;
BACKUP DEVICE TYPE DISK DATABASE;

-- to take backup from Command File named 'cmdfile1.txt' which holds 'BACKUP DATABASE PLUS ARCHIVELOG;'
cmd> rman TARGET / @cmdfile1.txt  
or
RMAN> @cmdfile1.txt  

--The following variation of the command creates image copy backups of all data files in the database:
RMAN> BACKUP AS COPY DATABASE;

4. Open the database and resume normal operations.
--The following command opens the database:
RMAN> ALTER DATABASE OPEN;

#Incremental Backups:
--Incremental backups capture block-level changes to a database made after a previous incremental backup.
To make incremental backups of the database:
1. Start RMAN and connect to a target database 
2. Run the BACKUP INCREMENTAL command.
--The following example creates a level 0 incremental backup to serve as a base for an incremental backup strategy:
RMAN> BACKUP INCREMENTAL LEVEL 0 DATABASE;

--The following example creates a level 1 cumulative incremental backup:
BACKUP INCREMENTAL LEVEL 1 CUMULATIVE DATABASE;

The following example creates a level 1 differential incremental backup:
BACKUP INCREMENTAL LEVEL 1 DATABASE;

#FOR RECOVER OF COPY Option:
1. Using tag: FOR RECOVER OF COPY WITH TAG 'tag_name'
RMAN> BACKUP INCREMENTAL LEVEL 1 FOR RECOVER OF COPY WITH TAG 'incr_update' DATABASE;

2. Using file format name: FOR RECOVER OF COPY DATAFILECOPY FORMAT 'format'
RMAN> BACKUP INCREMENTAL LEVEL 1 FOR RECOVER OF COPY DATAFILECOPY FORMAT '/disk2/df1.cpy' DATABASE;

To implement an incrementally updated backup strategy:
1. Start RMAN and connect to a target database 
2. Run the RECOVER COPY and BACKUP INCREMENTAL commands on a regular basis.
RMAN> RECOVER COPY OF DATABASE WITH TAG 'incr_update';
RMAN> BACKUP INCREMENTAL LEVEL 1 FOR RECOVER OF COPY WITH TAG 'incr_update' DATABASE;


#To create and run a command file:
1. Use a text editor to create a command file.
For example, create a command file with the file name # my_command_file.txt
CONNECT TARGET /
BACKUP DATABASE PLUS ARCHIVELOG;
LIST BACKUP;
EXIT;

2. Execute the contents of a command file by using @
RMAN> @/my_dir/my_command_file.txt 
or
CMD> rman @/my_dir/my_command_file.txt



#Restore and Recover Database Files:

--To preview a database restore and recovery:
1. Start RMAN and connect to the target database 
2. Optionally, list the current tablespaces and data files
RMAN> REPORT SCHEMA;
3. Run the RESTORE DATABASE command with the PREVIEW option. The following command specifies SUMMARY so that the backup metadata is not displayed in verbose mode (sample output included):
RMAN> RESTORE DATABASE PREVIEW SUMMARY;

In this case, RMAN queries the metadata and does not actually read the backup files. The database can be open when you run this command.

--To recover the whole database:
1. Prepare for recovery with 'report schema' and 'restore preview' command
2. Place the database in a mounted state.
RMAN> STARTUP FORCE MOUNT;
3. Restore the database.
The following example uses the preconfigured disk channel to restore the database:
RMAN> RESTORE DATABASE;
4. Recover the database, as shown in the following example:
RMAN> RECOVER DATABASE;
5. Open the database, as shown in the following example:
RMAN> ALTER DATABASE OPEN;

Recovering Tablespaces:
--To recover an individual tablespace when the database is open:
1. Prepare for recovery with 'report schema' and 'restore preview' command
2. Take the tablespace to be recovered offline. The following example takes the USERS tablespace offline:
RMAN> ALTER TABLESPACE users OFFLINE;

3. Restore and recover the tablespace. The following RUN command, which you execute at the RMAN prompt, sets a new name
for the data file in the USERS tablespace:
RUN
{
SET NEWNAME FOR DATAFILE '/disk1/oradata/prod/users01.dbf' TO '/disk2/users01.dbf';
RESTORE TABLESPACE users;
SWITCH DATAFILE ALL; # update control file with new file names
RECOVER TABLESPACE users;
}

4. Bring the tablespace online, as shown in the following example:
RMAN> ALTER TABLESPACE users ONLINE;

You can also use RESTORE DATAFILE and RECOVER DATAFILE for recovery at the data file level.

--To recover data blocks: any corrupted blocksare listed in V$DATABASE_BLOCK_CORRUPTION
1. Start RMAN and connect to the target database 
2. Obtain the block numbers of the corrupted blocks if you do not have this information.
RMAN> SELECT NAME, VALUE FROM V$DIAG_INFO;
3. Run the RECOVER command to repair the blocks. The following RMAN command recovers all corrupted blocks:
RMAN> RECOVER CORRUPTION LIST;

You can also recover individual blocks, as shown in the following example:
RMAN> RECOVER DATAFILE 1 BLOCK 233, 235 DATAFILE 2 BLOCK 100 TO 200;

